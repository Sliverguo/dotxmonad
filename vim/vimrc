if has("nvim")
    call plug#begin('~/.config/nvim/plugged')
else
    call plug#begin('~/.vim/plugged')
endif

" basic plugins
Plug 'tpope/vim-repeat'
Plug 'bling/vim-airline'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'Yggdroot/indentLine'
Plug 'sickill/vim-monokai'
Plug 'luochen1990/rainbow'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/syntastic'
Plug 'jiangmiao/auto-pairs'
Plug 'kshenoy/vim-signature'
Plug 'Valloric/YouCompleteMe'
Plug 'airblade/vim-gitgutter'
Plug 'scrooloose/nerdcommenter'
Plug 'itchyny/vim-haskell-indent'
Plug 'terryma/vim-multiple-cursors'
Plug 'hynek/vim-python-pep8-indent'
Plug 'ntpeters/vim-better-whitespace'
Plug 'tacahiroy/ctrlp-funky' | Plug 'kien/ctrlp.vim'
call plug#end()

" basic settings
" vim settings(neovim has enabled by default)
if !has("nvim")
    set autoindent
    set backspace=indent,eol,start
    set display=lastline
    set encoding=utf-8
    set history=1000
    set hlsearch
    set incsearch
    set laststatus=2
    set wildmenu
endif

"syntax
syntax on
syntax enable
" display
set ignorecase
set number
set ruler
set showcmd
set showmode
set cursorline cursorcolumn
set cc=80
set wrap
set textwidth=0
"display pairs
set showmatch
"indent
set expandtab
set shiftwidth=4
set tabstop=4
set softtabstop=4
set cindent
set shiftround
"Tab
set smarttab
"
"plug-in settings

" Rainbow
let g:rainbow_active = 1

" vim undodir
set undofile
set undodir="~/.cache/undodir"

" emacs key bindings for vim insert mode
inoremap <C-d> <Del>
inoremap <C-a> <Home>
inoremap <C-e> <End>
inoremap <C-f> <Right>
inoremap <C-b> <Left>

" syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_python_checkers=['flake8']
let g:syntastic_python_flake8_args='--ignore=I201,E501,E225'

" ctrlp-funky
nnoremap <Leader>\ :CtrlPFunky<Cr>
let g:ctrlp_funky_matchtype = 'path'

" YouCompleteMe jump to definition, or declaration if definition doesn't exist.
nnoremap <Leader>] :YcmCompleter GoTo<CR>
let g:ycm_autoclose_preview_window_after_completion=1

" colorscheme
try
    colorscheme monokai
catch /^Vim\%((\a\+)\)\=:E185/
    colorscheme desert
endtry

" import pdb
nnoremap <Leader>b Oimport pdb; pdb.set_trace()  # TODO remove it<Esc>:w<CR>
nnoremap <Leader>b Oimport ipdb; ipdb.set_trace()  # TODO remove it<Esc>:w<CR>
nnoremap <Leader>u Oimport pudb; pudb.set_trace()  # TODO remove it<Esc>:w<CR>

" NERDTree
nnoremap <Leader>n :NERDTreeToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" paste mode
set pastetoggle=<Leader>p

" make mouse only works on command line mode
set mouse=c

" move between windows
" normal, visual, select mode
if has("nvim")
    " it's for avoiding a neovim bug --- c-h doesn't work:
    " https://github.com/neovim/neovim/issues/2048
    nnoremap <BS> <C-W>h
endif
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
if has("nvim")
    " terminal mode
    nnoremap <C-s> :vs term://bash<CR>A
    tnoremap <Esc> <C-\><C-n>
    tnoremap <C-h> <C-\><C-n><C-w>h
    tnoremap <C-j> <C-\><C-n><C-w>j
    tnoremap <C-k> <C-\><C-n><C-w>k
    tnoremap <C-l> <C-\><C-n><C-w>l
endif
