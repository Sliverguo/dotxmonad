if has("win32") || has("win64")
    let UNIX = 0
else
    let UNIX = 1
endif

if v:version > 800
    let ASYNC = 1
else
    let ASYNC = 0
endif

if UNIX
    let VIM_PLUG_HOME= '~/.vim/plugged'
else
    let VIM_PLUG_HOME = '~\vimfiles\plugged'
endif

call plug#begin(VIM_PLUG_HOME)

" plugins
Plug 'cohama/agit.vim'
Plug 'danro/rename.vim'
Plug 'hynek/vim-python-pep8-indent'
Plug 'jiajunhuang/vim-cython'
Plug 'jiangmiao/auto-pairs'
Plug 'junegunn/vim-easy-align'
Plug 'kshenoy/vim-signature'
Plug 'luochen1990/rainbow'
Plug 'neovimhaskell/haskell-vim'
Plug 'ntpeters/vim-better-whitespace'
Plug 'othree/eregex.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'sickill/vim-monokai'
Plug 'terryma/vim-expand-region'
Plug 'terryma/vim-multiple-cursors'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'vim-airline/vim-airline'

" UNIX only
if UNIX
    Plug 'Valloric/YouCompleteMe'
    Plug 'ctrlpvim/ctrlp.vim' | Plug 'tacahiroy/ctrlp-funky'
    Plug 'easymotion/vim-easymotion'
    Plug 'ludovicchabant/vim-gutentags' | Plug 'majutsushi/tagbar'
    Plug 'mileszs/ack.vim'
    Plug 'scrooloose/nerdtree' | Plug 'jistr/vim-nerdtree-tabs' | Plug 'Xuyuanp/nerdtree-git-plugin'
    Plug 'tpope/vim-fugitive'
    if ASYNC
        Plug 'w0rp/ale'
    else
        Plug 'vim-syntastic/syntastic'
    endif
endif

call plug#end()

" settings

" Windows only
if !UNIX
    set encoding=utf-8
    set fileencodings=utf-8,chinese,latin-1
    source $VIMRUNTIME/delmenu.vim
    source $VIMRUNTIME/menu.vim
    language messages zh_CN.UTF-8
    set guifont=Consolas:h14:cANSI
    set guioptions-=m  "remove menu bar
    set guioptions-=T  "remove toolbar
    set guioptions-=r  "remove right-hand scroll bar
    set guioptions-=L  "remove left-hand scroll bar
    set guioptions+=a  "auto copy mouse selection
    autocmd GUIEnter * set vb t_vb= "disable sound
endif

" Regular vim only
set nocompatible
set autoindent
set autoread
set backspace=indent,eol,start
set display=lastline
set encoding=utf-8
set history=10000
set hlsearch
set incsearch
set laststatus=2
set wildmenu

"syntax
syntax on
syntax enable
" display
set ignorecase
set ruler
set number
set showcmd
set showmode
set cursorline cursorcolumn
set cc=80
set wrap
set textwidth=0
"display pairs
set showmatch
"indent
set expandtab
set shiftwidth=4
set tabstop=4
set softtabstop=4
set cindent
set shiftround
"Tab
set smarttab
"clipboard
set clipboard+=unnamedplus
" colorscheme, default to monokai, fallback to desert
try
    colorscheme monokai
catch /^Vim\%((\a\+)\)\=:E185/
    colorscheme desert
endtry

" shortcuts
" import pdb
nnoremap <Leader>b Oimport pdb; pdb.set_trace()  # TODO remove it<Esc>:w<CR>

" paste mode
set pastetoggle=<F2>
" toggle number
noremap <F4> :set invnumber<CR>
inoremap <F4> <C-O>:set invnumber<CR>
" make mouse only works on command line mode
set mouse=c

" move between windows
" normal, visual, select mode
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" emacs key bindings for vim insert mode
inoremap <C-d> <Del>
inoremap <C-a> <Home>
inoremap <C-e> <End>
inoremap <C-f> <Right>
inoremap <C-b> <Left>

" plugin settings
" Rainbow
let g:rainbow_active = 1

" UNIX only
if UNIX
    "Ack
    nnoremap <Leader>a  :Ack!<Space>

    " NERDTree
    nnoremap <F1> :NERDTreeTabsToggle<CR>

    "easymotion
    let g:EasyMotion_do_mapping = 0 " Disable default mappings
    nmap s <Plug>(easymotion-bd-f)
    nmap S <Plug>(easymotion-overwin-line)

    " ctrlp-funky
    nnoremap ff :CtrlPFunky<Cr>
    let g:ctrlp_funky_matchtype = 'path'

    " Tagbar
    nnoremap <F3> :TagbarToggle<CR>

    " YouCompleteMe
    let g:ycm_autoclose_preview_window_after_completion=1
    let g:ycm_collect_identifiers_from_tags_files = 1 " Let YCM read tags from Ctags file
    let g:ycm_seed_identifiers_with_syntax = 1 " Completion for programming language's keyword
    let g:ycm_complete_in_comments = 1 " Completion in comments
    let g:ycm_complete_in_strings = 1 " Completion in string
    nnoremap <leader>\ :YcmCompleter GoTo<CR>

    if executable('ag')
        let g:ackprg = 'ag --vimgrep'
        " Use ag over grep
        set grepprg=ag\ --nogroup\ --nocolor
        " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
        let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
        " ag is fast enough that CtrlP doesn't need to cache
        let g:ctrlp_use_caching = 0
    endif
endif
