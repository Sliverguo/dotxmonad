let VIM_PLUG_HOME = '~/.config/nvim/plugged'

call plug#begin(VIM_PLUG_HOME)

" plugins
" language specific: syntax, or indent or something else
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
Plug 'autozimu/LanguageClient-neovim', { 'branch': 'next', 'do': 'bash install.sh' }
Plug 'hynek/vim-python-pep8-indent'
Plug 'itchyny/vim-haskell-indent'
Plug 'stephpy/vim-yaml'
Plug 'zchee/deoplete-go', { 'do': 'make'}
Plug 'zchee/deoplete-jedi'
Plug 'Shougo/neco-syntax'

" utils
Plug 'airblade/vim-gitgutter'
Plug 'cohama/agit.vim'
Plug 'ervandew/supertab'
Plug 'jiangmiao/auto-pairs'
Plug 'justinmk/vim-sneak'
Plug 'majutsushi/tagbar'
Plug 'mbbill/undotree'
Plug 'mileszs/ack.vim'
Plug 'othree/eregex.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'terryma/vim-multiple-cursors'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-rhubarb'
Plug 'tpope/vim-rsi'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-surround'

" look and feel
Plug 'itchyny/lightline.vim'
Plug 'kshenoy/vim-signature'
Plug 'luochen1990/rainbow'
Plug 'ntpeters/vim-better-whitespace'
Plug 'sickill/vim-monokai'

" utils
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all'  } | Plug 'junegunn/fzf.vim'
Plug 'tpope/vim-eunuch'

" language specific
Plug 'vim-jp/vim-go-extra'

" syntax check
" Go: golint(https://github.com/golang/lint)
Plug 'w0rp/ale'

call plug#end()

" settings
"syntax
syntax on
syntax enable

" display
set ignorecase
set ruler
set number
set showcmd
set showmode
set cursorline cursorcolumn
set colorcolumn=120
set wrap
set textwidth=0

"display pairs
set showmatch

"indent
set expandtab
set shiftwidth=4
set tabstop=4
set softtabstop=4
set cindent
set shiftround

"Tab
set smarttab

" colorscheme, default to monokai, fallback to desert
try
    colorscheme monokai
catch /^Vim\%((\a\+)\)\=:E185/
    colorscheme desert
endtry

" shortcuts
" paste mode
set pastetoggle=<F2>

" toggle number
noremap <F4> :set invnumber<CR>
inoremap <F4> <C-O>:set invnumber<CR>

" tagbar
nmap <F8> :TagbarToggle<CR>
" install `gotags` frist
let g:tagbar_type_go = {
            \ 'ctagstype' : 'go',
            \ 'kinds'     : [
            \ 'p:package',
            \ 'i:imports:1',
            \ 'c:constants',
            \ 'v:variables',
            \ 't:types',
            \ 'n:interfaces',
            \ 'w:fields',
            \ 'e:embedded',
            \ 'm:methods',
            \ 'r:constructor',
            \ 'f:functions'
            \ ],
            \ 'sro' : '.',
            \ 'kind2scope' : {
            \ 't' : 'ctype',
            \ 'n' : 'ntype'
            \ },
            \ 'scope2kind' : {
            \ 'ctype' : 't',
            \ 'ntype' : 'n'
            \ },
            \ 'ctagsbin'  : 'gotags',
            \ 'ctagsargs' : '-sort -silent'
            \ }

" nerdtree
nmap <F3> :NERDTreeToggle<CR>

" make mouse only works on command line mode
set mouse=c

" use Ctrl + hjkl to move left, down, up, right
nnoremap <C-H> <C-W>h
nnoremap <C-L> <C-W>l
nnoremap <C-J> <C-W>j
nnoremap <C-K> <C-W>k

" resize
nnoremap <Up> <C-W>-2
nnoremap <Down> <C-W>+2
nnoremap <Left> <C-W><2
nnoremap <Right> <C-W>>2

" preview substitute
set inccommand=nosplit
tnoremap <Esc> <C-\><C-n>
nnoremap <C-s> <Esc>:vsplit term://bash<CR>A
nnoremap <C-x> <Esc>:split term://bash<CR>A

" python
nnoremap <leader>d Oimport pdb; pdb.set_trace()<Esc>

" persistent
set undodir=~/.cache/vimundo/
set undofile

" plugin settings
" Rainbow
let g:rainbow_active = 1

" fzf
nnoremap <C-p> :Files<CR>
nnoremap <leader>b :Buffers<CR>
nnoremap <leader>m :Marks<CR>
nnoremap <leader>a :Ag<CR>
nnoremap <leader>c :Commits<CR>
nnoremap ff :BLines<CR>

" terminal
nnoremap <leader>t :vsplit term://bash<CR>
nnoremap <leader>T :split term://bash<CR>

" vim-sneak
let g:sneak#label = 1

nmap <leader>p <Plug>(ale_previous_wrap)
nmap <leader>n <Plug>(ale_next_wrap)

let g:ale_linters = {'proto': ['prototool']}

" deoplete
let g:deoplete#enable_at_startup = 1
set hidden
" languange server: http://langserver.org/
let g:LanguageClient_serverCommands = {
            \ 'python': ['pyls'],
            \ 'go': ['go-langserver'],
            \ }
nnoremap <leader>\ :call LanguageClient#textDocument_definition()<CR>
nnoremap <leader>k :call LanguageClient#textDocument_hover()<CR>
nnoremap <leader>r :call LanguageClient#textDocument_rename()<CR>

" supertab
let g:SuperTabDefaultCompletionType = "<c-n>"
