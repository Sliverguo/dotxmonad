if has("win32") || has("win64")
    call plug#begin('~/vimfiles/plugged')
elseif has("nvim")
    call plug#begin('~/.config/nvim/plugged')
else
    call plug#begin('~/.vim/plugged')
endif

" plugins
Plug 'Yggdroot/indentLine'
Plug 'bling/vim-airline'
Plug 'ctrlpvim/ctrlp.vim' | Plug 'tacahiroy/ctrlp-funky'
Plug 'hynek/vim-python-pep8-indent', { 'for': 'python' }
Plug 'jiangmiao/auto-pairs'
Plug 'kshenoy/vim-signature'
Plug 'luochen1990/rainbow'
Plug 'matze/vim-move'
Plug 'neovimhaskell/haskell-vim', { 'for': 'haskell' }
Plug 'ntpeters/vim-better-whitespace'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree' | Plug 'jistr/vim-nerdtree-tabs'
Plug 'sickill/vim-monokai'
Plug 'terryma/vim-multiple-cursors'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'w0rp/ale'

"""""""""""""""""""" system specific plugins """"""""""""""""""""""
if !(has("win32") || has("win64"))
    Plug 'Valloric/YouCompleteMe', { 'for': ['python', 'haskell', 'c', 'cpp'] }
    Plug 'ludovicchabant/vim-gutentags'  " auto (re) generate and manage tags
endif
call plug#end()
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" settings
" system settings
if has("win32") || has("win64")
    set encoding=utf-8
    set fileencodings=utf-8,chinese,latin-1
    source $VIMRUNTIME/delmenu.vim
    source $VIMRUNTIME/menu.vim
    language messages zh_CN.UTF-8
    set guifont=Consolas:h14:cANSI
    set guioptions-=m  "remove menu bar
    set guioptions-=T  "remove toolbar
    set guioptions-=r  "remove right-hand scroll bar
    set guioptions-=L  "remove left-hand scroll bar
    set guioptions+=a  "auto copy mouse selection
    autocmd GUIEnter * set vb t_vb= "disable sound
    let g:nerdtree_tabs_open_on_gui_startup=0 "disable nerdtree tabs auto start
endif

" vim settings(neovim has enabled by default)
if !has("nvim")
    set nocompatible
    set autoindent
    set autoread
    set backspace=indent,eol,start
    set display=lastline
    set encoding=utf-8
    set history=10000
    set hlsearch
    set incsearch
    set laststatus=2
    set wildmenu
endif

"syntax
syntax on
syntax enable
" display
set ignorecase
set ruler
set number
set showcmd
set showmode
set cursorline cursorcolumn
set cc=80
set wrap
set textwidth=0
"display pairs
set showmatch
"indent
set expandtab
set shiftwidth=4
set tabstop=4
set softtabstop=4
set cindent
set shiftround
"Tab
set smarttab
" colorscheme, default to monokai, fallback to desert
try
    colorscheme monokai
catch /^Vim\%((\a\+)\)\=:E185/
    colorscheme desert
endtry

" shortcuts
" import pdb
nnoremap <Leader>b Oimport pdb; pdb.set_trace()  # TODO remove it<Esc>:w<CR>
nnoremap <Leader>i Oimport ipdb; ipdb.set_trace()  # TODO remove it<Esc>:w<CR>
nnoremap <Leader>u Oimport pudb; pudb.set_trace()  # TODO remove it<Esc>:w<CR>

" paste mode
set pastetoggle=<F2>
" toggle number
noremap <F4> :set invnumber<CR>
inoremap <F4> <C-O>:set invnumber<CR>
" NERDTree
nnoremap <F1> :NERDTreeTabsToggle<CR>

" make mouse only works on command line mode
set mouse=c

" move between windows
" normal, visual, select mode
if has("nvim")
    " it's for avoiding a neovim bug --- c-h doesn't work:
    " https://github.com/neovim/neovim/issues/2048
    nnoremap <BS> <C-W>h
endif
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
if has("nvim")
    " terminal mode
    nnoremap <C-s> :vs term://bash<CR>A
    tnoremap <Esc> <C-\><C-n>
    tnoremap <C-h> <C-\><C-n><C-w>h
    tnoremap <C-j> <C-\><C-n><C-w>j
    tnoremap <C-k> <C-\><C-n><C-w>k
    tnoremap <C-l> <C-\><C-n><C-w>l
endif

" emacs key bindings for vim insert mode
inoremap <C-d> <Del>
inoremap <C-a> <Home>
inoremap <C-e> <End>
inoremap <C-f> <Right>
inoremap <C-b> <Left>

" clipboard(install xsel first)
" Copy to clipboard
vnoremap  <leader>y  "+y
nnoremap  <leader>y  "+y

" Paste from clipboard
nnoremap <leader>p "+p
nnoremap <leader>P "+P
vnoremap <leader>p "+p
vnoremap <leader>P "+P

" plugin settings

" Rainbow
let g:rainbow_active = 1

" ctrlp-funky
nnoremap <Leader>\ :CtrlPFunky<Cr>
let g:ctrlp_funky_matchtype = 'path'

" vim-move
let g:move_key_modifier = 'C'

"""""""""""""""""" system specific plugin settings """""""""""""""""
if !(has("win32") || has("win64"))
    " YouCompleteMe
    let g:ycm_autoclose_preview_window_after_completion=1
    let g:ycm_collect_identifiers_from_tags_files = 1 " Let YCM read tags from Ctags file
    let g:ycm_seed_identifiers_with_syntax = 1 " Completion for programming language's keyword
    let g:ycm_complete_in_comments = 1 " Completion in comments
    let g:ycm_complete_in_strings = 1 " Completion in string
    nnoremap <leader>j :YcmCompleter GoTo<CR>
endif
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
