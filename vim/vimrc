silent function! s:WINDOWS()
    return (has("win32") || has("win64"))
endfunction

silent function! s:LINUX()
    return (has('unix') && !has('macunix') && !has('win32unix'))
endfunction

silent function! s:NVIM()
    return (has('nvim'))
endfunction

silent function! s:ASYNC()
    return ((v:version >= 800) || s:NVIM())
endfunction

if s:LINUX()
    if s:NVIM()
        let VIM_PLUG_HOME = '~/.config/nvim/plugged'
    else
        let VIM_PLUG_HOME = '~/.vim/plugged'
    endif
else
    let VIM_PLUG_HOME = '~\vimfiles\plugged'
endif

call plug#begin(VIM_PLUG_HOME)

" plugins
" language specific: syntax, or indent or something else
Plug 'hdima/python-syntax'
Plug 'hynek/vim-python-pep8-indent'
Plug 'neovimhaskell/haskell-vim'
Plug 'tshirtman/vim-cython'

" utils
Plug 'tpope/vim-sensible'
Plug 'airblade/vim-gitgutter'
Plug 'cohama/agit.vim'
Plug 'danro/rename.vim'
Plug 'jiangmiao/auto-pairs'
Plug 'othree/eregex.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'terryma/vim-multiple-cursors'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'

" look and feel
Plug 'itchyny/lightline.vim'
Plug 'kshenoy/vim-signature'
Plug 'luochen1990/rainbow'
Plug 'ntpeters/vim-better-whitespace'
Plug 'sickill/vim-monokai'

" Linux only
if s:LINUX()
    " utils
    Plug 'Valloric/YouCompleteMe'
    Plug 'easymotion/vim-easymotion'
    Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --bin'  } | Plug 'junegunn/fzf.vim'

    " language specific
    Plug 'vim-jp/vim-go-extra'

    " syntax check
    if s:ASYNC()
        " Go: golint(https://github.com/golang/lint)
        Plug 'w0rp/ale'
    else
        Plug 'vim-syntastic/syntastic'
    endif
endif

if s:WINDOWS()
    Plug 'mhinz/vim-startify'
    Plug 'jiajunhuang/gvim.vim'
endif

call plug#end()

" settings
"syntax
syntax on
syntax enable

" display
set ignorecase
set ruler
set number
set showcmd
set showmode
set cursorline cursorcolumn
set cc=80
set wrap
set textwidth=0

"display pairs
set showmatch

"indent
set expandtab
set shiftwidth=4
set tabstop=4
set softtabstop=4
set cindent
set shiftround

"Tab
set smarttab

" colorscheme, default to monokai, fallback to desert
try
    colorscheme monokai
catch /^Vim\%((\a\+)\)\=:E185/
    colorscheme desert
endtry

" shortcuts
" paste mode
set pastetoggle=<F2>

" toggle number
noremap <F4> :set invnumber<CR>
inoremap <F4> <C-O>:set invnumber<CR>

" make mouse only works on command line mode
set mouse=c

" emacs key bindings for vim insert mode
inoremap <C-d> <Del>
inoremap <C-a> <Home>
inoremap <C-e> <End>
inoremap <C-f> <Right>
inoremap <C-b> <Left>

" plugin settings
" Rainbow
let g:rainbow_active = 1

" Linux only
if s:LINUX()
    " fzf
    nnoremap <C-p> :Files<CR>
    nnoremap <Leader>b :Buffers<CR>
    nnoremap <Leader>m :Marks<CR>
    nnoremap <Leader>a :Ag<CR>
    nnoremap ff :BLines<CR>

    "easymotion
    let g:EasyMotion_do_mapping = 0 " Disable default mappings
    nmap s <Plug>(easymotion-bd-f)
    nmap S <Plug>(easymotion-overwin-line)

    " YouCompleteMe
    let g:ycm_seed_identifiers_with_syntax = 1
    let g:ycm_autoclose_preview_window_after_insertion = 1
    nnoremap <leader>\ :YcmCompleter GoTo<CR>

    if s:ASYNC()
        nmap <leader>p <Plug>(ale_previous_wrap)
        nmap <leader>n <Plug>(ale_next_wrap)
    endif
endif
