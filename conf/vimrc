let VIM_PLUG_HOME = '~/.config/nvim/plugged'

call plug#begin(VIM_PLUG_HOME)

" plugins
" language specific: syntax, or indent or something else
Plug 'Shougo/neco-syntax'
Plug 'google/vim-maktaba' | Plug 'google/vim-codefmt', {'for': ['python', 'go', 'c', 'dart']}
Plug 'hynek/vim-python-pep8-indent', { 'for': 'python' }
Plug 'stephpy/vim-yaml', { 'for': 'yaml' }
Plug 'ervandew/supertab'
Plug 'Valloric/YouCompleteMe'
Plug 'dart-lang/dart-vim-plugin'
" Go: golint(https://github.com/golang/lint)
" Python: flake8
Plug 'w0rp/ale'

" utils
Plug 'jiangmiao/auto-pairs'
Plug 'ludovicchabant/vim-gutentags'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all'  } | Plug 'junegunn/fzf.vim'
Plug 'mileszs/ack.vim'
Plug 'othree/eregex.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-rsi'
Plug 'tpope/vim-surround'

" look and feel
Plug 'itchyny/lightline.vim'
Plug 'kshenoy/vim-signature'
Plug 'luochen1990/rainbow'
Plug 'ntpeters/vim-better-whitespace'
Plug 'sickill/vim-monokai'

call plug#end()

" settings
"syntax
syntax on
syntax enable

" display
set ignorecase
set ruler
set number
set showcmd
set showmode
set cursorline cursorcolumn
set colorcolumn=120
set wrap
set textwidth=0

"display pairs
set showmatch

" clipboard, remember to install xclip first
set clipboard=unnamedplus

"indent
set expandtab
set shiftwidth=4
set tabstop=4
set softtabstop=4
set cindent
set shiftround

"Tab
set smarttab

" colorscheme, default to monokai, fallback to desert
try
    colorscheme monokai
catch /^Vim\%((\a\+)\)\=:E185/
    colorscheme desert
endtry

" shortcuts
" paste mode
set pastetoggle=<F2>

" toggle number
noremap <F4> :set invnumber<CR>
inoremap <F4> <C-O>:set invnumber<CR>

" use jk instead of Esc
inoremap jk <Esc>

" vim file explore
nmap <F3> :Explore<CR>

" make mouse only works on command line mode
set mouse=c

" use Ctrl + hjkl to move left, down, up, right
nnoremap <C-H> <C-W>h
nnoremap <C-L> <C-W>l
nnoremap <C-J> <C-W>j
nnoremap <C-K> <C-W>k

" resize
nnoremap <Up> <C-W>-2
nnoremap <Down> <C-W>+2
nnoremap <Left> <C-W><2
nnoremap <Right> <C-W>>2

" preview substitute
set inccommand=nosplit
tnoremap <Esc> <C-\><C-n>
nnoremap <C-s> <Esc>:vsplit term://bash<CR>A
nnoremap <C-x> <Esc>:split term://bash<CR>A

" persistent
set undodir=~/.cache/vimundo/
set undofile

" Plugin Settings

" Rainbow
let g:rainbow_active = 1

" fzf
nnoremap <C-p> :Files<CR>
nnoremap <leader>a :Ag<CR>
nnoremap <leader>c :Commits<CR>
nnoremap ff :BLines<CR>

" terminal
nnoremap <leader>t :vsplit term://bash<CR>
nnoremap <leader>T :split term://bash<CR>

" vim markdown
let g:vim_markdown_folding_disabled = 1

" code format
augroup autoformat_settings
  " autocmd FileType bzl AutoFormatBuffer buildifier
  " autocmd FileType c,cpp,proto,javascript AutoFormatBuffer clang-format
  autocmd FileType dart AutoFormatBuffer dartfmt
  autocmd FileType go AutoFormatBuffer gofmt
  " autocmd FileType gn AutoFormatBuffer gn
  " autocmd FileType html,css,json AutoFormatBuffer js-beautify
  " autocmd FileType java AutoFormatBuffer google-java-format
  " Alternative: autocmd FileType python AutoFormatBuffer autopep8
augroup END

" YCM
nnoremap <leader>\ :YcmCompleter GoTo<CR>
let g:ycm_add_preview_to_completeopt = 1
let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_language_server = [
  \   {
  \     'name': 'dart',
  \     'cmdline': ['dart', '/opt/dart-sdk/bin/snapshots/analysis_server.dart.snapshot', '--lsp'],
  \     'filetypes': [ 'dart' ],
  \   },
  \ ]

" ALE
nmap <leader>p <Plug>(ale_previous_wrap)
nmap <leader>n <Plug>(ale_next_wrap)
